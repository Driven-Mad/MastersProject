// Copyright 1998-2016 Epic Games, Inc. All Rights Reserved.
/*===========================================================================
	Boilerplate C++ definitions for a single module.
	This is automatically generated by UnrealHeaderTool.
	DO NOT modify this manually! Edit the corresponding .h files instead!
===========================================================================*/

#include "Ava.h"
#include "Ava.generated.dep.h"
PRAGMA_DISABLE_DEPRECATION_WARNINGS
void EmptyLinkFunctionForGeneratedCode1Ava() {}
	void AAntelope::StaticRegisterNativesAAntelope()
	{
	}
	IMPLEMENT_CLASS(AAntelope, 3211305425);
	void AEscapePoint::StaticRegisterNativesAEscapePoint()
	{
	}
	IMPLEMENT_CLASS(AEscapePoint, 462117881);
	void ARoutePoint::StaticRegisterNativesARoutePoint()
	{
	}
	IMPLEMENT_CLASS(ARoutePoint, 1897031591);
	void AAntelopeAIController::StaticRegisterNativesAAntelopeAIController()
	{
		FNativeFunctionRegistrar::RegisterFunction(AAntelopeAIController::StaticClass(), "SearchForPlayer",(Native)&AAntelopeAIController::execSearchForPlayer);
	}
	IMPLEMENT_CLASS(AAntelopeAIController, 3206526809);
	void AAvaGameMode::StaticRegisterNativesAAvaGameMode()
	{
	}
	IMPLEMENT_CLASS(AAvaGameMode, 1064099451);
	void UBTServiceSearchForPlayer::StaticRegisterNativesUBTServiceSearchForPlayer()
	{
	}
	IMPLEMENT_CLASS(UBTServiceSearchForPlayer, 1098623683);
	void UBTTaskFindClosestEscapePoint::StaticRegisterNativesUBTTaskFindClosestEscapePoint()
	{
	}
	IMPLEMENT_CLASS(UBTTaskFindClosestEscapePoint, 3703746931);
	void UBTTaskFindNextRoutePoint::StaticRegisterNativesUBTTaskFindNextRoutePoint()
	{
	}
	IMPLEMENT_CLASS(UBTTaskFindNextRoutePoint, 3342134226);
static class UEnum* ItemDataVariables_StaticEnum()
{
	extern AVA_API class UPackage* Z_Construct_UPackage__Script_Ava();
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern AVA_API class UEnum* Z_Construct_UEnum_Ava_ItemDataVariables();
		Singleton = GetStaticEnum(Z_Construct_UEnum_Ava_ItemDataVariables, Z_Construct_UPackage__Script_Ava(), TEXT("ItemDataVariables"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_ItemDataVariables(ItemDataVariables_StaticEnum, TEXT("/Script/Ava"), TEXT("ItemDataVariables"), false, nullptr, nullptr);
static class UEnum* Item_StaticEnum()
{
	extern AVA_API class UPackage* Z_Construct_UPackage__Script_Ava();
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern AVA_API class UEnum* Z_Construct_UEnum_Ava_Item();
		Singleton = GetStaticEnum(Z_Construct_UEnum_Ava_Item, Z_Construct_UPackage__Script_Ava(), TEXT("Item"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_Item(Item_StaticEnum, TEXT("/Script/Ava"), TEXT("Item"), false, nullptr, nullptr);
	void ADataFactory::StaticRegisterNativesADataFactory()
	{
	}
	IMPLEMENT_CLASS(ADataFactory, 2503768525);
	void APushPullItem::StaticRegisterNativesAPushPullItem()
	{
	}
	IMPLEMENT_CLASS(APushPullItem, 2210308149);
	void AMainCharacter::StaticRegisterNativesAMainCharacter()
	{
	}
	IMPLEMENT_CLASS(AMainCharacter, 3820613738);
	void UMainMenu::StaticRegisterNativesUMainMenu()
	{
		FNativeFunctionRegistrar::RegisterFunction(UMainMenu::StaticClass(), "Construct",(Native)&UMainMenu::execConstruct);
		FNativeFunctionRegistrar::RegisterFunction(UMainMenu::StaticClass(), "Play",(Native)&UMainMenu::execPlay);
	}
	IMPLEMENT_CLASS(UMainMenu, 1990416401);
	void APickUpItem::StaticRegisterNativesAPickUpItem()
	{
	}
	IMPLEMENT_CLASS(APickUpItem, 2848418529);
	void AStatueObject::StaticRegisterNativesAStatueObject()
	{
	}
	IMPLEMENT_CLASS(AStatueObject, 3382700909);
#if USE_COMPILED_IN_NATIVES
// Cross Module References
	ENGINE_API class UClass* Z_Construct_UClass_ACharacter();
	AIMODULE_API class UClass* Z_Construct_UClass_UBehaviorTree_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_USphereComponent_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_ATargetPoint();
	AIMODULE_API class UClass* Z_Construct_UClass_AAIController();
	AIMODULE_API class UClass* Z_Construct_UClass_UBehaviorTreeComponent_NoRegister();
	AIMODULE_API class UClass* Z_Construct_UClass_UBlackboardComponent_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_AGameMode();
	AIMODULE_API class UClass* Z_Construct_UClass_UBTService_BlackboardBase();
	AIMODULE_API class UClass* Z_Construct_UClass_UBTTask_BlackboardBase();
	ENGINE_API class UClass* Z_Construct_UClass_AActor();
	ENGINE_API class UClass* Z_Construct_UClass_UStaticMeshComponent_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UCameraComponent_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_USpringArmComponent_NoRegister();
	UMG_API class UClass* Z_Construct_UClass_UUserWidget();

	AVA_API class UClass* Z_Construct_UClass_AAntelope_NoRegister();
	AVA_API class UClass* Z_Construct_UClass_AAntelope();
	AVA_API class UClass* Z_Construct_UClass_AEscapePoint_NoRegister();
	AVA_API class UClass* Z_Construct_UClass_AEscapePoint();
	AVA_API class UClass* Z_Construct_UClass_ARoutePoint_NoRegister();
	AVA_API class UClass* Z_Construct_UClass_ARoutePoint();
	AVA_API class UFunction* Z_Construct_UFunction_AAntelopeAIController_SearchForPlayer();
	AVA_API class UClass* Z_Construct_UClass_AAntelopeAIController_NoRegister();
	AVA_API class UClass* Z_Construct_UClass_AAntelopeAIController();
	AVA_API class UClass* Z_Construct_UClass_AAvaGameMode_NoRegister();
	AVA_API class UClass* Z_Construct_UClass_AAvaGameMode();
	AVA_API class UClass* Z_Construct_UClass_UBTServiceSearchForPlayer_NoRegister();
	AVA_API class UClass* Z_Construct_UClass_UBTServiceSearchForPlayer();
	AVA_API class UClass* Z_Construct_UClass_UBTTaskFindClosestEscapePoint_NoRegister();
	AVA_API class UClass* Z_Construct_UClass_UBTTaskFindClosestEscapePoint();
	AVA_API class UClass* Z_Construct_UClass_UBTTaskFindNextRoutePoint_NoRegister();
	AVA_API class UClass* Z_Construct_UClass_UBTTaskFindNextRoutePoint();
	AVA_API class UEnum* Z_Construct_UEnum_Ava_ItemDataVariables();
	AVA_API class UEnum* Z_Construct_UEnum_Ava_Item();
	AVA_API class UClass* Z_Construct_UClass_ADataFactory_NoRegister();
	AVA_API class UClass* Z_Construct_UClass_ADataFactory();
	AVA_API class UClass* Z_Construct_UClass_APushPullItem_NoRegister();
	AVA_API class UClass* Z_Construct_UClass_APushPullItem();
	AVA_API class UClass* Z_Construct_UClass_AMainCharacter_NoRegister();
	AVA_API class UClass* Z_Construct_UClass_AMainCharacter();
	AVA_API class UFunction* Z_Construct_UFunction_UMainMenu_Construct();
	AVA_API class UFunction* Z_Construct_UFunction_UMainMenu_Play();
	AVA_API class UClass* Z_Construct_UClass_UMainMenu_NoRegister();
	AVA_API class UClass* Z_Construct_UClass_UMainMenu();
	AVA_API class UClass* Z_Construct_UClass_APickUpItem_NoRegister();
	AVA_API class UClass* Z_Construct_UClass_APickUpItem();
	AVA_API class UClass* Z_Construct_UClass_AStatueObject_NoRegister();
	AVA_API class UClass* Z_Construct_UClass_AStatueObject();
	AVA_API class UPackage* Z_Construct_UPackage__Script_Ava();
	UClass* Z_Construct_UClass_AAntelope_NoRegister()
	{
		return AAntelope::StaticClass();
	}
	UClass* Z_Construct_UClass_AAntelope()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_ACharacter();
			Z_Construct_UPackage__Script_Ava();
			OuterClass = AAntelope::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20900080;


PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_walkingSpeed = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("walkingSpeed"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(walkingSpeed, AAntelope), 0x0010000000000001);
				UProperty* NewProp_runningSpeed = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("runningSpeed"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(runningSpeed, AAntelope), 0x0010000000000001);
				UProperty* NewProp_m_AntelopeBehaviourTree = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("m_AntelopeBehaviourTree"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(m_AntelopeBehaviourTree, AAntelope), 0x0010000000000001, Z_Construct_UClass_UBehaviorTree_NoRegister());
				UProperty* NewProp_m_CollisionSphere = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("m_CollisionSphere"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(m_CollisionSphere, AAntelope), 0x00100000000a000d, Z_Construct_UClass_USphereComponent_NoRegister());
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("HideCategories"), TEXT("Navigation"));
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("Antelope.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Antelope.h"));
				MetaData->SetValue(OuterClass, TEXT("OnlyDefaultConstructorDeclared"), TEXT(""));
				MetaData->SetValue(NewProp_walkingSpeed, TEXT("Category"), TEXT("AIVariables"));
				MetaData->SetValue(NewProp_walkingSpeed, TEXT("ModuleRelativePath"), TEXT("Antelope.h"));
				MetaData->SetValue(NewProp_runningSpeed, TEXT("Category"), TEXT("AIVariables"));
				MetaData->SetValue(NewProp_runningSpeed, TEXT("ModuleRelativePath"), TEXT("Antelope.h"));
				MetaData->SetValue(NewProp_m_AntelopeBehaviourTree, TEXT("Category"), TEXT("AIVariables"));
				MetaData->SetValue(NewProp_m_AntelopeBehaviourTree, TEXT("ModuleRelativePath"), TEXT("Antelope.h"));
				MetaData->SetValue(NewProp_m_CollisionSphere, TEXT("Category"), TEXT("AIVariables"));
				MetaData->SetValue(NewProp_m_CollisionSphere, TEXT("EditInline"), TEXT("true"));
				MetaData->SetValue(NewProp_m_CollisionSphere, TEXT("ModuleRelativePath"), TEXT("Antelope.h"));
				MetaData->SetValue(NewProp_m_CollisionSphere, TEXT("ToolTip"), TEXT("Collision sphere for the AI"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_AAntelope(Z_Construct_UClass_AAntelope, &AAntelope::StaticClass, TEXT("AAntelope"), false, nullptr, nullptr);
	DEFINE_VTABLE_PTR_HELPER_CTOR(AAntelope);
	UClass* Z_Construct_UClass_AEscapePoint_NoRegister()
	{
		return AEscapePoint::StaticClass();
	}
	UClass* Z_Construct_UClass_AEscapePoint()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_ATargetPoint();
			Z_Construct_UPackage__Script_Ava();
			OuterClass = AEscapePoint::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20900080;


				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("EscapePoint.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("EscapePoint.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_AEscapePoint(Z_Construct_UClass_AEscapePoint, &AEscapePoint::StaticClass, TEXT("AEscapePoint"), false, nullptr, nullptr);
	DEFINE_VTABLE_PTR_HELPER_CTOR(AEscapePoint);
	UClass* Z_Construct_UClass_ARoutePoint_NoRegister()
	{
		return ARoutePoint::StaticClass();
	}
	UClass* Z_Construct_UClass_ARoutePoint()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_ATargetPoint();
			Z_Construct_UPackage__Script_Ava();
			OuterClass = ARoutePoint::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20900080;


PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_RouteNumber = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("RouteNumber"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(RouteNumber, ARoutePoint), 0x0010000000000005);
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("RoutePoint.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("RoutePoint.h"));
				MetaData->SetValue(NewProp_RouteNumber, TEXT("Category"), TEXT("RouteID"));
				MetaData->SetValue(NewProp_RouteNumber, TEXT("ModuleRelativePath"), TEXT("RoutePoint.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_ARoutePoint(Z_Construct_UClass_ARoutePoint, &ARoutePoint::StaticClass, TEXT("ARoutePoint"), false, nullptr, nullptr);
	DEFINE_VTABLE_PTR_HELPER_CTOR(ARoutePoint);
	UFunction* Z_Construct_UFunction_AAntelopeAIController_SearchForPlayer()
	{
		UObject* Outer=Z_Construct_UClass_AAntelopeAIController();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("SearchForPlayer"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04020401, 65535);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Behaviour"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("AntelopeAIController.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Search for player"));
#endif
		}
		return ReturnFunction;
	}
	UClass* Z_Construct_UClass_AAntelopeAIController_NoRegister()
	{
		return AAntelopeAIController::StaticClass();
	}
	UClass* Z_Construct_UClass_AAntelopeAIController()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_AAIController();
			Z_Construct_UPackage__Script_Ava();
			OuterClass = AAntelopeAIController::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20900280;

				OuterClass->LinkChild(Z_Construct_UFunction_AAntelopeAIController_SearchForPlayer());

PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_playerName = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("playerName"), RF_Public|RF_Transient|RF_MarkAsNative) UNameProperty(CPP_PROPERTY_BASE(playerName, AAntelopeAIController), 0x0010000000010001);
				UProperty* NewProp_playerPositionName = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("playerPositionName"), RF_Public|RF_Transient|RF_MarkAsNative) UNameProperty(CPP_PROPERTY_BASE(playerPositionName, AAntelopeAIController), 0x0010000000010001);
				UProperty* NewProp_myPositionName = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("myPositionName"), RF_Public|RF_Transient|RF_MarkAsNative) UNameProperty(CPP_PROPERTY_BASE(myPositionName, AAntelopeAIController), 0x0010000000010001);
				UProperty* NewProp_currentRouteWayPointName = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("currentRouteWayPointName"), RF_Public|RF_Transient|RF_MarkAsNative) UNameProperty(CPP_PROPERTY_BASE(currentRouteWayPointName, AAntelopeAIController), 0x0010000000010001);
				UProperty* NewProp_currentEscapeWayPointName = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("currentEscapeWayPointName"), RF_Public|RF_Transient|RF_MarkAsNative) UNameProperty(CPP_PROPERTY_BASE(currentEscapeWayPointName, AAntelopeAIController), 0x0010000000010001);
				UProperty* NewProp_targetLocationName = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("targetLocationName"), RF_Public|RF_Transient|RF_MarkAsNative) UNameProperty(CPP_PROPERTY_BASE(targetLocationName, AAntelopeAIController), 0x0010000000010001);
				UProperty* NewProp_myBehaviourTreeComponent = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("myBehaviourTreeComponent"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(myBehaviourTreeComponent, AAntelopeAIController), 0x0010000000080009, Z_Construct_UClass_UBehaviorTreeComponent_NoRegister());
				UProperty* NewProp_myBlackBoardComponent = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("myBlackBoardComponent"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(myBlackBoardComponent, AAntelopeAIController), 0x0010000000080009, Z_Construct_UClass_UBlackboardComponent_NoRegister());
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_AAntelopeAIController_SearchForPlayer(), "SearchForPlayer"); // 923501262
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("HideCategories"), TEXT("Collision Rendering Utilities|Transformation"));
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("AntelopeAIController.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("AntelopeAIController.h"));
				MetaData->SetValue(OuterClass, TEXT("OnlyDefaultConstructorDeclared"), TEXT(""));
				MetaData->SetValue(NewProp_playerName, TEXT("Category"), TEXT("AI"));
				MetaData->SetValue(NewProp_playerName, TEXT("ModuleRelativePath"), TEXT("AntelopeAIController.h"));
				MetaData->SetValue(NewProp_playerPositionName, TEXT("Category"), TEXT("AI"));
				MetaData->SetValue(NewProp_playerPositionName, TEXT("ModuleRelativePath"), TEXT("AntelopeAIController.h"));
				MetaData->SetValue(NewProp_myPositionName, TEXT("Category"), TEXT("AI"));
				MetaData->SetValue(NewProp_myPositionName, TEXT("ModuleRelativePath"), TEXT("AntelopeAIController.h"));
				MetaData->SetValue(NewProp_currentRouteWayPointName, TEXT("Category"), TEXT("AI"));
				MetaData->SetValue(NewProp_currentRouteWayPointName, TEXT("ModuleRelativePath"), TEXT("AntelopeAIController.h"));
				MetaData->SetValue(NewProp_currentEscapeWayPointName, TEXT("Category"), TEXT("AI"));
				MetaData->SetValue(NewProp_currentEscapeWayPointName, TEXT("ModuleRelativePath"), TEXT("AntelopeAIController.h"));
				MetaData->SetValue(NewProp_targetLocationName, TEXT("Category"), TEXT("AI"));
				MetaData->SetValue(NewProp_targetLocationName, TEXT("ModuleRelativePath"), TEXT("AntelopeAIController.h"));
				MetaData->SetValue(NewProp_targetLocationName, TEXT("ToolTip"), TEXT("Different Names for variables within our blackboard."));
				MetaData->SetValue(NewProp_myBehaviourTreeComponent, TEXT("Category"), TEXT("AntelopeAIController"));
				MetaData->SetValue(NewProp_myBehaviourTreeComponent, TEXT("EditInline"), TEXT("true"));
				MetaData->SetValue(NewProp_myBehaviourTreeComponent, TEXT("ModuleRelativePath"), TEXT("AntelopeAIController.h"));
				MetaData->SetValue(NewProp_myBehaviourTreeComponent, TEXT("ToolTip"), TEXT("Behaviour tree component for the AI Controller"));
				MetaData->SetValue(NewProp_myBlackBoardComponent, TEXT("Category"), TEXT("AntelopeAIController"));
				MetaData->SetValue(NewProp_myBlackBoardComponent, TEXT("EditInline"), TEXT("true"));
				MetaData->SetValue(NewProp_myBlackBoardComponent, TEXT("ModuleRelativePath"), TEXT("AntelopeAIController.h"));
				MetaData->SetValue(NewProp_myBlackBoardComponent, TEXT("ToolTip"), TEXT("Blackboard component for the AI controller"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_AAntelopeAIController(Z_Construct_UClass_AAntelopeAIController, &AAntelopeAIController::StaticClass, TEXT("AAntelopeAIController"), false, nullptr, nullptr);
	DEFINE_VTABLE_PTR_HELPER_CTOR(AAntelopeAIController);
	UClass* Z_Construct_UClass_AAvaGameMode_NoRegister()
	{
		return AAvaGameMode::StaticClass();
	}
	UClass* Z_Construct_UClass_AAvaGameMode()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_AGameMode();
			Z_Construct_UPackage__Script_Ava();
			OuterClass = AAvaGameMode::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x2090028C;


				OuterClass->ClassConfigName = FName(TEXT("Game"));
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("HideCategories"), TEXT("Info Rendering MovementReplication Replication Actor Input Movement Collision Rendering Utilities|Transformation"));
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("AvaGameMode.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("AvaGameMode.h"));
				MetaData->SetValue(OuterClass, TEXT("ShowCategories"), TEXT("Input|MouseInput Input|TouchInput"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_AAvaGameMode(Z_Construct_UClass_AAvaGameMode, &AAvaGameMode::StaticClass, TEXT("AAvaGameMode"), false, nullptr, nullptr);
	DEFINE_VTABLE_PTR_HELPER_CTOR(AAvaGameMode);
	UClass* Z_Construct_UClass_UBTServiceSearchForPlayer_NoRegister()
	{
		return UBTServiceSearchForPlayer::StaticClass();
	}
	UClass* Z_Construct_UClass_UBTServiceSearchForPlayer()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UBTService_BlackboardBase();
			Z_Construct_UPackage__Script_Ava();
			OuterClass = UBTServiceSearchForPlayer::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20100080;


				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("BTServiceSearchForPlayer.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("BTServiceSearchForPlayer.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UBTServiceSearchForPlayer(Z_Construct_UClass_UBTServiceSearchForPlayer, &UBTServiceSearchForPlayer::StaticClass, TEXT("UBTServiceSearchForPlayer"), false, nullptr, nullptr);
	DEFINE_VTABLE_PTR_HELPER_CTOR(UBTServiceSearchForPlayer);
	UClass* Z_Construct_UClass_UBTTaskFindClosestEscapePoint_NoRegister()
	{
		return UBTTaskFindClosestEscapePoint::StaticClass();
	}
	UClass* Z_Construct_UClass_UBTTaskFindClosestEscapePoint()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UBTTask_BlackboardBase();
			Z_Construct_UPackage__Script_Ava();
			OuterClass = UBTTaskFindClosestEscapePoint::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20100080;


				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("BTTaskFindClosestEscapePoint.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("BTTaskFindClosestEscapePoint.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UBTTaskFindClosestEscapePoint(Z_Construct_UClass_UBTTaskFindClosestEscapePoint, &UBTTaskFindClosestEscapePoint::StaticClass, TEXT("UBTTaskFindClosestEscapePoint"), false, nullptr, nullptr);
	DEFINE_VTABLE_PTR_HELPER_CTOR(UBTTaskFindClosestEscapePoint);
	UClass* Z_Construct_UClass_UBTTaskFindNextRoutePoint_NoRegister()
	{
		return UBTTaskFindNextRoutePoint::StaticClass();
	}
	UClass* Z_Construct_UClass_UBTTaskFindNextRoutePoint()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UBTTask_BlackboardBase();
			Z_Construct_UPackage__Script_Ava();
			OuterClass = UBTTaskFindNextRoutePoint::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20100080;


				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("BTTaskFindNextRoutePoint.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("BTTaskFindNextRoutePoint.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UBTTaskFindNextRoutePoint(Z_Construct_UClass_UBTTaskFindNextRoutePoint, &UBTTaskFindNextRoutePoint::StaticClass, TEXT("UBTTaskFindNextRoutePoint"), false, nullptr, nullptr);
	DEFINE_VTABLE_PTR_HELPER_CTOR(UBTTaskFindNextRoutePoint);
	UEnum* Z_Construct_UEnum_Ava_ItemDataVariables()
	{
		UPackage* Outer=Z_Construct_UPackage__Script_Ava();
		extern uint32 Get_Z_Construct_UEnum_Ava_ItemDataVariables_CRC();
		static UEnum* ReturnEnum = FindExistingEnumIfHotReloadOrDynamic(Outer, TEXT("ItemDataVariables"), 0, Get_Z_Construct_UEnum_Ava_ItemDataVariables_CRC(), false);
		if (!ReturnEnum)
		{
			ReturnEnum = new(EC_InternalUseOnlyConstructor, Outer, TEXT("ItemDataVariables"), RF_Public|RF_Transient|RF_MarkAsNative) UEnum(FObjectInitializer());
			TArray<TPair<FName, uint8>> EnumNames;
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("ItemDataVariables::itemMeshFilepath")), 0));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("ItemDataVariables::itemSpriteFilepath")), 1));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("ItemDataVariables::itemName")), 2));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("ItemDataVariables::itemDescription")), 3));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("ItemDataVariables::itemEnumIdentifier")), 4));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("ItemDataVariables::ItemDataVariables_MAX")), 5));
			ReturnEnum->SetEnums(EnumNames, UEnum::ECppForm::EnumClass);
			ReturnEnum->CppType = TEXT("ItemDataVariables");
#if WITH_METADATA
			UMetaData* MetaData = ReturnEnum->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnEnum, TEXT("BlueprintType"), TEXT("true"));
			MetaData->SetValue(ReturnEnum, TEXT("itemDescription.DisplayName"), TEXT("itemDescription"));
			MetaData->SetValue(ReturnEnum, TEXT("itemEnumIdentifier.DisplayName"), TEXT("itemEnumIdentifier"));
			MetaData->SetValue(ReturnEnum, TEXT("itemMeshFilepath.DisplayName"), TEXT("itemMeshFilepath"));
			MetaData->SetValue(ReturnEnum, TEXT("itemName.DisplayName"), TEXT("itemName"));
			MetaData->SetValue(ReturnEnum, TEXT("itemSpriteFilepath.DisplayName"), TEXT("itemSrpiteFilepath"));
			MetaData->SetValue(ReturnEnum, TEXT("ModuleRelativePath"), TEXT("DataFactory.h"));
			MetaData->SetValue(ReturnEnum, TEXT("ToolTip"), TEXT("@brief Data variable enums for our items to be used with TMaps"));
#endif
		}
		return ReturnEnum;
	}
	uint32 Get_Z_Construct_UEnum_Ava_ItemDataVariables_CRC() { return 309101387U; }
	UEnum* Z_Construct_UEnum_Ava_Item()
	{
		UPackage* Outer=Z_Construct_UPackage__Script_Ava();
		extern uint32 Get_Z_Construct_UEnum_Ava_Item_CRC();
		static UEnum* ReturnEnum = FindExistingEnumIfHotReloadOrDynamic(Outer, TEXT("Item"), 0, Get_Z_Construct_UEnum_Ava_Item_CRC(), false);
		if (!ReturnEnum)
		{
			ReturnEnum = new(EC_InternalUseOnlyConstructor, Outer, TEXT("Item"), RF_Public|RF_Transient|RF_MarkAsNative) UEnum(FObjectInitializer());
			TArray<TPair<FName, uint8>> EnumNames;
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("Item::Scroll01")), 0));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("Item::Scroll02")), 1));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("Item::Scroll03")), 2));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("Item::Scroll04")), 3));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("Item::Scroll05")), 4));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("Item::Scroll06")), 5));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("Item::Scroll07")), 6));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("Item::Scroll08")), 7));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("Item::Bracelet")), 8));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("Item::Item_MAX")), 9));
			ReturnEnum->SetEnums(EnumNames, UEnum::ECppForm::EnumClass);
			ReturnEnum->CppType = TEXT("Item");
#if WITH_METADATA
			UMetaData* MetaData = ReturnEnum->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnEnum, TEXT("BlueprintType"), TEXT("true"));
			MetaData->SetValue(ReturnEnum, TEXT("Bracelet.DisplayName"), TEXT("Bracelet"));
			MetaData->SetValue(ReturnEnum, TEXT("ModuleRelativePath"), TEXT("DataFactory.h"));
			MetaData->SetValue(ReturnEnum, TEXT("Scroll01.DisplayName"), TEXT("Scroll01"));
			MetaData->SetValue(ReturnEnum, TEXT("Scroll02.DisplayName"), TEXT("Scroll02"));
			MetaData->SetValue(ReturnEnum, TEXT("Scroll03.DisplayName"), TEXT("Scroll03"));
			MetaData->SetValue(ReturnEnum, TEXT("Scroll04.DisplayName"), TEXT("Scroll04"));
			MetaData->SetValue(ReturnEnum, TEXT("Scroll05.DisplayName"), TEXT("Scroll05"));
			MetaData->SetValue(ReturnEnum, TEXT("Scroll06.DisplayName"), TEXT("Scroll06"));
			MetaData->SetValue(ReturnEnum, TEXT("Scroll07.DisplayName"), TEXT("Scroll07"));
			MetaData->SetValue(ReturnEnum, TEXT("Scroll08.DisplayName"), TEXT("Scroll08"));
			MetaData->SetValue(ReturnEnum, TEXT("ToolTip"), TEXT("@brief enums for items to be used with TMaps"));
#endif
		}
		return ReturnEnum;
	}
	uint32 Get_Z_Construct_UEnum_Ava_Item_CRC() { return 1758199059U; }
	UClass* Z_Construct_UClass_ADataFactory_NoRegister()
	{
		return ADataFactory::StaticClass();
	}
	UClass* Z_Construct_UClass_ADataFactory()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_AActor();
			Z_Construct_UPackage__Script_Ava();
			OuterClass = ADataFactory::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20900080;


				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("DataFactory.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("DataFactory.h"));
				MetaData->SetValue(OuterClass, TEXT("OnlyDefaultConstructorDeclared"), TEXT(""));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_ADataFactory(Z_Construct_UClass_ADataFactory, &ADataFactory::StaticClass, TEXT("ADataFactory"), false, nullptr, nullptr);
	DEFINE_VTABLE_PTR_HELPER_CTOR(ADataFactory);
	UClass* Z_Construct_UClass_APushPullItem_NoRegister()
	{
		return APushPullItem::StaticClass();
	}
	UClass* Z_Construct_UClass_APushPullItem()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_AActor();
			Z_Construct_UPackage__Script_Ava();
			OuterClass = APushPullItem::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20900080;


PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_designatedMesh = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("designatedMesh"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(designatedMesh, APushPullItem), 0x001000000008001d, Z_Construct_UClass_UStaticMeshComponent_NoRegister());
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("PushPullItem.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("PushPullItem.h"));
				MetaData->SetValue(OuterClass, TEXT("OnlyDefaultConstructorDeclared"), TEXT(""));
				MetaData->SetValue(NewProp_designatedMesh, TEXT("AllowPrivateAccess"), TEXT("true"));
				MetaData->SetValue(NewProp_designatedMesh, TEXT("Category"), TEXT("pushableItemVariables"));
				MetaData->SetValue(NewProp_designatedMesh, TEXT("EditInline"), TEXT("true"));
				MetaData->SetValue(NewProp_designatedMesh, TEXT("ModuleRelativePath"), TEXT("PushPullItem.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_APushPullItem(Z_Construct_UClass_APushPullItem, &APushPullItem::StaticClass, TEXT("APushPullItem"), false, nullptr, nullptr);
	DEFINE_VTABLE_PTR_HELPER_CTOR(APushPullItem);
	UClass* Z_Construct_UClass_AMainCharacter_NoRegister()
	{
		return AMainCharacter::StaticClass();
	}
	UClass* Z_Construct_UClass_AMainCharacter()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_ACharacter();
			Z_Construct_UPackage__Script_Ava();
			OuterClass = AMainCharacter::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20900080;


PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_characterArmHeight = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("characterArmHeight"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(characterArmHeight, AMainCharacter), 0x0010000000000005);
				UProperty* NewProp_pushPullTraceCheckDistance = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("pushPullTraceCheckDistance"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(pushPullTraceCheckDistance, AMainCharacter), 0x0010000000000005);
				UProperty* NewProp_overlappingSphere = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("overlappingSphere"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(overlappingSphere, AMainCharacter), 0x00100000000a001d, Z_Construct_UClass_USphereComponent_NoRegister());
				UProperty* NewProp_lookRate = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("lookRate"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(lookRate, AMainCharacter), 0x0010000000000005);
				UProperty* NewProp_turnRate = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("turnRate"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(turnRate, AMainCharacter), 0x0010000000000005);
				UProperty* NewProp_sprintSpeed = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("sprintSpeed"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(sprintSpeed, AMainCharacter), 0x0010000000000005);
				UProperty* NewProp_runSpeed = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("runSpeed"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(runSpeed, AMainCharacter), 0x0010000000000005);
				UProperty* NewProp_walkSpeed = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("walkSpeed"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(walkSpeed, AMainCharacter), 0x0010000000000005);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(bIsInteracting, AMainCharacter, bool);
				UProperty* NewProp_bIsInteracting = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("bIsInteracting"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bIsInteracting, AMainCharacter), 0x0010000000000005, CPP_BOOL_PROPERTY_BITMASK(bIsInteracting, AMainCharacter), sizeof(bool), true);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(bIsPushPulling, AMainCharacter, bool);
				UProperty* NewProp_bIsPushPulling = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("bIsPushPulling"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bIsPushPulling, AMainCharacter), 0x0010000000000005, CPP_BOOL_PROPERTY_BITMASK(bIsPushPulling, AMainCharacter), sizeof(bool), true);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(bIsPraying, AMainCharacter, bool);
				UProperty* NewProp_bIsPraying = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("bIsPraying"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bIsPraying, AMainCharacter), 0x0010000000000005, CPP_BOOL_PROPERTY_BITMASK(bIsPraying, AMainCharacter), sizeof(bool), true);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(bIsInInventory, AMainCharacter, bool);
				UProperty* NewProp_bIsInInventory = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("bIsInInventory"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bIsInInventory, AMainCharacter), 0x0010000000000005, CPP_BOOL_PROPERTY_BITMASK(bIsInInventory, AMainCharacter), sizeof(bool), true);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(bIsIdle, AMainCharacter, bool);
				UProperty* NewProp_bIsIdle = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("bIsIdle"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bIsIdle, AMainCharacter), 0x0010000000000005, CPP_BOOL_PROPERTY_BITMASK(bIsIdle, AMainCharacter), sizeof(bool), true);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(bIsTurning, AMainCharacter, bool);
				UProperty* NewProp_bIsTurning = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("bIsTurning"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bIsTurning, AMainCharacter), 0x0010000000000005, CPP_BOOL_PROPERTY_BITMASK(bIsTurning, AMainCharacter), sizeof(bool), true);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(bIsAlert, AMainCharacter, bool);
				UProperty* NewProp_bIsAlert = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("bIsAlert"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bIsAlert, AMainCharacter), 0x0010000000000005, CPP_BOOL_PROPERTY_BITMASK(bIsAlert, AMainCharacter), sizeof(bool), true);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(bIsJumping, AMainCharacter, bool);
				UProperty* NewProp_bIsJumping = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("bIsJumping"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bIsJumping, AMainCharacter), 0x0010000000000005, CPP_BOOL_PROPERTY_BITMASK(bIsJumping, AMainCharacter), sizeof(bool), true);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(bIsWalking, AMainCharacter, bool);
				UProperty* NewProp_bIsWalking = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("bIsWalking"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bIsWalking, AMainCharacter), 0x0010000000000005, CPP_BOOL_PROPERTY_BITMASK(bIsWalking, AMainCharacter), sizeof(bool), true);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(bIsRunning, AMainCharacter, bool);
				UProperty* NewProp_bIsRunning = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("bIsRunning"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bIsRunning, AMainCharacter), 0x0010000000000005, CPP_BOOL_PROPERTY_BITMASK(bIsRunning, AMainCharacter), sizeof(bool), true);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(bIsSprinting, AMainCharacter, bool);
				UProperty* NewProp_bIsSprinting = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("bIsSprinting"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bIsSprinting, AMainCharacter), 0x0010000000000005, CPP_BOOL_PROPERTY_BITMASK(bIsSprinting, AMainCharacter), sizeof(bool), true);
				UProperty* NewProp_FollowCamera = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("FollowCamera"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(FollowCamera, AMainCharacter), 0x00100000000a001d, Z_Construct_UClass_UCameraComponent_NoRegister());
				UProperty* NewProp_CameraBoom = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("CameraBoom"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(CameraBoom, AMainCharacter), 0x00100000000a001d, Z_Construct_UClass_USpringArmComponent_NoRegister());
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("HideCategories"), TEXT("Navigation"));
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("MainCharacter.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("MainCharacter.h"));
				MetaData->SetValue(OuterClass, TEXT("OnlyDefaultConstructorDeclared"), TEXT(""));
				MetaData->SetValue(NewProp_characterArmHeight, TEXT("Category"), TEXT("pushPullAttributes"));
				MetaData->SetValue(NewProp_characterArmHeight, TEXT("ModuleRelativePath"), TEXT("MainCharacter.h"));
				MetaData->SetValue(NewProp_pushPullTraceCheckDistance, TEXT("Category"), TEXT("pushPullAttributes"));
				MetaData->SetValue(NewProp_pushPullTraceCheckDistance, TEXT("ModuleRelativePath"), TEXT("MainCharacter.h"));
				MetaData->SetValue(NewProp_overlappingSphere, TEXT("AllowPrivateAccess"), TEXT("true"));
				MetaData->SetValue(NewProp_overlappingSphere, TEXT("Category"), TEXT("prayingComponents"));
				MetaData->SetValue(NewProp_overlappingSphere, TEXT("EditInline"), TEXT("true"));
				MetaData->SetValue(NewProp_overlappingSphere, TEXT("ModuleRelativePath"), TEXT("MainCharacter.h"));
				MetaData->SetValue(NewProp_lookRate, TEXT("Category"), TEXT("CharacterSpeeds"));
				MetaData->SetValue(NewProp_lookRate, TEXT("ModuleRelativePath"), TEXT("MainCharacter.h"));
				MetaData->SetValue(NewProp_lookRate, TEXT("ToolTip"), TEXT("@brief CharacterState - characters camera look speed"));
				MetaData->SetValue(NewProp_turnRate, TEXT("Category"), TEXT("CharacterSpeeds"));
				MetaData->SetValue(NewProp_turnRate, TEXT("ModuleRelativePath"), TEXT("MainCharacter.h"));
				MetaData->SetValue(NewProp_turnRate, TEXT("ToolTip"), TEXT("@brief CharacterState - characters camera turn speed"));
				MetaData->SetValue(NewProp_sprintSpeed, TEXT("Category"), TEXT("CharacterSpeeds"));
				MetaData->SetValue(NewProp_sprintSpeed, TEXT("ModuleRelativePath"), TEXT("MainCharacter.h"));
				MetaData->SetValue(NewProp_sprintSpeed, TEXT("ToolTip"), TEXT("@brief CharacterState - Characters sprint speed."));
				MetaData->SetValue(NewProp_runSpeed, TEXT("Category"), TEXT("CharacterSpeeds"));
				MetaData->SetValue(NewProp_runSpeed, TEXT("ModuleRelativePath"), TEXT("MainCharacter.h"));
				MetaData->SetValue(NewProp_runSpeed, TEXT("ToolTip"), TEXT("@brief CharacterSppeds - Characters run speed."));
				MetaData->SetValue(NewProp_walkSpeed, TEXT("Category"), TEXT("CharacterSpeeds"));
				MetaData->SetValue(NewProp_walkSpeed, TEXT("ModuleRelativePath"), TEXT("MainCharacter.h"));
				MetaData->SetValue(NewProp_walkSpeed, TEXT("ToolTip"), TEXT("CHARACTER SPEEDS\n--------------------------------------------------------------------------------------------------------------------------\n----------------------------------------------------------------------------------------------------------------------\n@brief CharacterSppeds - Characters walk speed."));
				MetaData->SetValue(NewProp_bIsInteracting, TEXT("Category"), TEXT("CharacterStates"));
				MetaData->SetValue(NewProp_bIsInteracting, TEXT("ModuleRelativePath"), TEXT("MainCharacter.h"));
				MetaData->SetValue(NewProp_bIsInteracting, TEXT("ToolTip"), TEXT("@brief CharacterState - Character is pushing/pulling"));
				MetaData->SetValue(NewProp_bIsPushPulling, TEXT("Category"), TEXT("CharacterStates"));
				MetaData->SetValue(NewProp_bIsPushPulling, TEXT("ModuleRelativePath"), TEXT("MainCharacter.h"));
				MetaData->SetValue(NewProp_bIsPushPulling, TEXT("ToolTip"), TEXT("@brief CharacterState - Character is pushing/pulling"));
				MetaData->SetValue(NewProp_bIsPraying, TEXT("Category"), TEXT("CharacterStates"));
				MetaData->SetValue(NewProp_bIsPraying, TEXT("ModuleRelativePath"), TEXT("MainCharacter.h"));
				MetaData->SetValue(NewProp_bIsPraying, TEXT("ToolTip"), TEXT("@brief CharacterState - Character is praying"));
				MetaData->SetValue(NewProp_bIsInInventory, TEXT("Category"), TEXT("CharacterStates"));
				MetaData->SetValue(NewProp_bIsInInventory, TEXT("ModuleRelativePath"), TEXT("MainCharacter.h"));
				MetaData->SetValue(NewProp_bIsInInventory, TEXT("ToolTip"), TEXT("@brief CharacterState - Character is In Invetory."));
				MetaData->SetValue(NewProp_bIsIdle, TEXT("Category"), TEXT("CharacterStates"));
				MetaData->SetValue(NewProp_bIsIdle, TEXT("ModuleRelativePath"), TEXT("MainCharacter.h"));
				MetaData->SetValue(NewProp_bIsIdle, TEXT("ToolTip"), TEXT("@brief CharacterState - Character is Idle"));
				MetaData->SetValue(NewProp_bIsTurning, TEXT("Category"), TEXT("CharacterStates"));
				MetaData->SetValue(NewProp_bIsTurning, TEXT("ModuleRelativePath"), TEXT("MainCharacter.h"));
				MetaData->SetValue(NewProp_bIsTurning, TEXT("ToolTip"), TEXT("@brief CharacterState - Character is Turning"));
				MetaData->SetValue(NewProp_bIsAlert, TEXT("Category"), TEXT("CharacterStates"));
				MetaData->SetValue(NewProp_bIsAlert, TEXT("ModuleRelativePath"), TEXT("MainCharacter.h"));
				MetaData->SetValue(NewProp_bIsAlert, TEXT("ToolTip"), TEXT("@brief CharacterState - Character is Alert"));
				MetaData->SetValue(NewProp_bIsJumping, TEXT("Category"), TEXT("CharacterStates"));
				MetaData->SetValue(NewProp_bIsJumping, TEXT("ModuleRelativePath"), TEXT("MainCharacter.h"));
				MetaData->SetValue(NewProp_bIsJumping, TEXT("ToolTip"), TEXT("@brief CharacterState - Character is Jumping"));
				MetaData->SetValue(NewProp_bIsWalking, TEXT("Category"), TEXT("CharacterStates"));
				MetaData->SetValue(NewProp_bIsWalking, TEXT("ModuleRelativePath"), TEXT("MainCharacter.h"));
				MetaData->SetValue(NewProp_bIsWalking, TEXT("ToolTip"), TEXT("@brief CharacterState - Character is Walking"));
				MetaData->SetValue(NewProp_bIsRunning, TEXT("Category"), TEXT("CharacterStates"));
				MetaData->SetValue(NewProp_bIsRunning, TEXT("ModuleRelativePath"), TEXT("MainCharacter.h"));
				MetaData->SetValue(NewProp_bIsRunning, TEXT("ToolTip"), TEXT("@brief CharacterState - Character is Running"));
				MetaData->SetValue(NewProp_bIsSprinting, TEXT("Category"), TEXT("CharacterStates"));
				MetaData->SetValue(NewProp_bIsSprinting, TEXT("ModuleRelativePath"), TEXT("MainCharacter.h"));
				MetaData->SetValue(NewProp_bIsSprinting, TEXT("ToolTip"), TEXT("CHARACTER STATES\n--------------------------------------------------------------------------------------------------------------------------\n----------------------------------------------------------------------------------------------------------------------\n@brief CharacterState - Character is Sprinting"));
				MetaData->SetValue(NewProp_FollowCamera, TEXT("AllowPrivateAccess"), TEXT("true"));
				MetaData->SetValue(NewProp_FollowCamera, TEXT("Category"), TEXT("Camera"));
				MetaData->SetValue(NewProp_FollowCamera, TEXT("EditInline"), TEXT("true"));
				MetaData->SetValue(NewProp_FollowCamera, TEXT("ModuleRelativePath"), TEXT("MainCharacter.h"));
				MetaData->SetValue(NewProp_FollowCamera, TEXT("ToolTip"), TEXT("@brief The camera that we'll be using to view our scene from."));
				MetaData->SetValue(NewProp_CameraBoom, TEXT("AllowPrivateAccess"), TEXT("true"));
				MetaData->SetValue(NewProp_CameraBoom, TEXT("Category"), TEXT("Camera"));
				MetaData->SetValue(NewProp_CameraBoom, TEXT("EditInline"), TEXT("true"));
				MetaData->SetValue(NewProp_CameraBoom, TEXT("ModuleRelativePath"), TEXT("MainCharacter.h"));
				MetaData->SetValue(NewProp_CameraBoom, TEXT("ToolTip"), TEXT("@brief The camaera boom which will stick our camera at a length from our character while also being diverse to\nspring back and forth depending on collision."));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_AMainCharacter(Z_Construct_UClass_AMainCharacter, &AMainCharacter::StaticClass, TEXT("AMainCharacter"), false, nullptr, nullptr);
	DEFINE_VTABLE_PTR_HELPER_CTOR(AMainCharacter);
	UFunction* Z_Construct_UFunction_UMainMenu_Construct()
	{
		UObject* Outer=Z_Construct_UClass_UMainMenu();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("Construct"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04020401, 65535);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("MyUUserWidgetClass"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("MainMenu.h"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UMainMenu_Play()
	{
		UObject* Outer=Z_Construct_UClass_UMainMenu();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("Play"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04020401, 65535);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("MyUUserWidgetClass"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("MainMenu.h"));
#endif
		}
		return ReturnFunction;
	}
	UClass* Z_Construct_UClass_UMainMenu_NoRegister()
	{
		return UMainMenu::StaticClass();
	}
	UClass* Z_Construct_UClass_UMainMenu()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UUserWidget();
			Z_Construct_UPackage__Script_Ava();
			OuterClass = UMainMenu::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20901080;

				OuterClass->LinkChild(Z_Construct_UFunction_UMainMenu_Construct());
				OuterClass->LinkChild(Z_Construct_UFunction_UMainMenu_Play());

				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UMainMenu_Construct(), "Construct"); // 2517957455
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UMainMenu_Play(), "Play"); // 1071271182
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("MainMenu.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("MainMenu.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UMainMenu(Z_Construct_UClass_UMainMenu, &UMainMenu::StaticClass, TEXT("UMainMenu"), false, nullptr, nullptr);
	DEFINE_VTABLE_PTR_HELPER_CTOR(UMainMenu);
	UClass* Z_Construct_UClass_APickUpItem_NoRegister()
	{
		return APickUpItem::StaticClass();
	}
	UClass* Z_Construct_UClass_APickUpItem()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_AActor();
			Z_Construct_UPackage__Script_Ava();
			OuterClass = APickUpItem::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20900080;


				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("PickUpItem.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("PickUpItem.h"));
				MetaData->SetValue(OuterClass, TEXT("OnlyDefaultConstructorDeclared"), TEXT(""));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_APickUpItem(Z_Construct_UClass_APickUpItem, &APickUpItem::StaticClass, TEXT("APickUpItem"), false, nullptr, nullptr);
	DEFINE_VTABLE_PTR_HELPER_CTOR(APickUpItem);
	UClass* Z_Construct_UClass_AStatueObject_NoRegister()
	{
		return AStatueObject::StaticClass();
	}
	UClass* Z_Construct_UClass_AStatueObject()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_AActor();
			Z_Construct_UPackage__Script_Ava();
			OuterClass = AStatueObject::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20900080;


PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_overlappingSphere = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("overlappingSphere"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(overlappingSphere, AStatueObject), 0x00100000000a001d, Z_Construct_UClass_USphereComponent_NoRegister());
				UProperty* NewProp_statueName = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("statueName"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(statueName, AStatueObject), 0x0010000000000005);
				UProperty* NewProp_designatedMesh = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("designatedMesh"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(designatedMesh, AStatueObject), 0x001000000008001d, Z_Construct_UClass_UStaticMeshComponent_NoRegister());
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(bCanPlayerPray, AStatueObject, bool);
				UProperty* NewProp_bCanPlayerPray = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("bCanPlayerPray"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bCanPlayerPray, AStatueObject), 0x0010000000020015, CPP_BOOL_PROPERTY_BITMASK(bCanPlayerPray, AStatueObject), sizeof(bool), true);
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("StatueObject.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("StatueObject.h"));
				MetaData->SetValue(OuterClass, TEXT("OnlyDefaultConstructorDeclared"), TEXT(""));
				MetaData->SetValue(NewProp_overlappingSphere, TEXT("AllowPrivateAccess"), TEXT("true"));
				MetaData->SetValue(NewProp_overlappingSphere, TEXT("Category"), TEXT("StatueVariables"));
				MetaData->SetValue(NewProp_overlappingSphere, TEXT("EditInline"), TEXT("true"));
				MetaData->SetValue(NewProp_overlappingSphere, TEXT("ModuleRelativePath"), TEXT("StatueObject.h"));
				MetaData->SetValue(NewProp_statueName, TEXT("AllowPrivateAccess"), TEXT("true"));
				MetaData->SetValue(NewProp_statueName, TEXT("Category"), TEXT("StatueVariables"));
				MetaData->SetValue(NewProp_statueName, TEXT("ModuleRelativePath"), TEXT("StatueObject.h"));
				MetaData->SetValue(NewProp_designatedMesh, TEXT("AllowPrivateAccess"), TEXT("true"));
				MetaData->SetValue(NewProp_designatedMesh, TEXT("Category"), TEXT("StatueVariables"));
				MetaData->SetValue(NewProp_designatedMesh, TEXT("EditInline"), TEXT("true"));
				MetaData->SetValue(NewProp_designatedMesh, TEXT("ModuleRelativePath"), TEXT("StatueObject.h"));
				MetaData->SetValue(NewProp_bCanPlayerPray, TEXT("AllowPrivateAccess"), TEXT("true"));
				MetaData->SetValue(NewProp_bCanPlayerPray, TEXT("Category"), TEXT("StatueVariables"));
				MetaData->SetValue(NewProp_bCanPlayerPray, TEXT("ModuleRelativePath"), TEXT("StatueObject.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_AStatueObject(Z_Construct_UClass_AStatueObject, &AStatueObject::StaticClass, TEXT("AStatueObject"), false, nullptr, nullptr);
	DEFINE_VTABLE_PTR_HELPER_CTOR(AStatueObject);
	UPackage* Z_Construct_UPackage__Script_Ava()
	{
		static UPackage* ReturnPackage = NULL;
		if (!ReturnPackage)
		{
			ReturnPackage = CastChecked<UPackage>(StaticFindObjectFast(UPackage::StaticClass(), NULL, FName(TEXT("/Script/Ava")), false, false));
			ReturnPackage->SetPackageFlags(PKG_CompiledIn | 0x00000000);
			FGuid Guid;
			Guid.A = 0x08358588;
			Guid.B = 0x68F0F256;
			Guid.C = 0x00000000;
			Guid.D = 0x00000000;
			ReturnPackage->SetGuid(Guid);

		}
		return ReturnPackage;
	}
#endif

PRAGMA_ENABLE_DEPRECATION_WARNINGS
